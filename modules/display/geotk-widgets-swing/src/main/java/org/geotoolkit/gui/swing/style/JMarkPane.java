/*
 *    GeoTools - The Open Source Java GIS Toolkit
 *    http://geotools.org
 * 
 *    (C) 2002-2008, Open Source Geospatial Foundation (OSGeo)
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 2.1 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */
package org.geotoolkit.gui.swing.style;

import org.geotoolkit.gui.swing.resource.MessageBundle;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.Font;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JLabel;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.SwingConstants;

import org.geotoolkit.factory.FactoryFinder;
import org.geotoolkit.map.MapLayer;

import org.jdesktop.swingx.JXTitledPanel;
import org.opengis.filter.FilterFactory;
import org.opengis.style.Mark;

/**
 * Mark panel
 * 
 * @author Johann Sorel
 */
public class JMarkPane extends StyleElementEditor<Mark> {
    
    private MapLayer layer = null;

    public JMarkPane() {
        initComponents();
        init();
    }

    private void init() {
        try{
            FilterFactory ff = FactoryFinder.getFilterFactory(null);
            guiWKN.setModel(
                ff.literal("square"),
                ff.literal("circle"),
                ff.literal("triangle"),
                ff.literal("star"),
                ff.literal("cross"),
                ff.literal("x")
                );
//            guiWKN.setModel(
//                org.geotools.style.StyleConstants.MARK_CIRCLE,
//                org.geotools.style.StyleConstants.MARK_CROSS,
//                org.geotools.style.StyleConstants.MARK_SQUARE,
//                org.geotools.style.StyleConstants.MARK_STAR,
//                org.geotools.style.StyleConstants.MARK_TRIANGLE,
//                org.geotools.style.StyleConstants.MARK_X);
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }

    @Override
    public void setLayer(MapLayer layer) {
        this.layer = layer;
        guiFill.setLayer(layer);
        guiStroke.setLayer(layer);
        guiWKN.setLayer(layer);
    }

    @Override
    public MapLayer getLayer() {
        return layer;
    }

    @Override
    public void parse(Mark mark) {
        if (mark != null) {
            guiFill.parse(mark.getFill());
            guiStroke.parse(mark.getStroke());
            guiWKN.parse(mark.getWellKnownName());
        }
    }

    @Override
    public Mark create() {
        return getStyleFactory().mark(
                guiWKN.create(), 
                guiStroke.create(), 
                guiFill.create());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXTitledPanel3 = new JXTitledPanel();
        guiWKN = new JComboExpressionPane();
        jLabel1 = new JLabel();
        jXTitledPanel2 = new JXTitledPanel();
        guiFill = new JFillPane();
        jXTitledPanel1 = new JXTitledPanel();
        guiStroke = new JStrokePane();

        setOpaque(false);



        jXTitledPanel3.setBorder(BorderFactory.createEtchedBorder());
        jXTitledPanel3.setTitle(MessageBundle.getString("general")); // NOI18N
        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() | Font.BOLD));
        jLabel1.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel1.setText(MessageBundle.getString("wellknownname")); // NOI18N
        GroupLayout jXTitledPanel3Layout = new GroupLayout(jXTitledPanel3.getContentContainer());
        jXTitledPanel3.getContentContainer().setLayout(jXTitledPanel3Layout);
        jXTitledPanel3Layout.setHorizontalGroup(
            jXTitledPanel3Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(jXTitledPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(guiWKN, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jXTitledPanel3Layout.setVerticalGroup(
            jXTitledPanel3Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(jXTitledPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jXTitledPanel3Layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(guiWKN, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jXTitledPanel3Layout.linkSize(SwingConstants.VERTICAL, new Component[] {guiWKN, jLabel1});

        jXTitledPanel2.setBorder(BorderFactory.createEtchedBorder());
        jXTitledPanel2.setTitle(MessageBundle.getString("fill")); // NOI18N
        jXTitledPanel2.getContentContainer().setLayout(new FlowLayout(FlowLayout.LEFT, 10, 5));
        jXTitledPanel2.getContentContainer().add(guiFill);

        jXTitledPanel1.setBorder(BorderFactory.createEtchedBorder());
        jXTitledPanel1.setTitle(MessageBundle.getString("stroke")); // NOI18N
        jXTitledPanel1.getContentContainer().setLayout(new FlowLayout(FlowLayout.LEFT, 10, 5));
        jXTitledPanel1.getContentContainer().add(guiStroke);

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addComponent(jXTitledPanel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jXTitledPanel1, GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
            .addComponent(jXTitledPanel2, GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jXTitledPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(jXTitledPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(jXTitledPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JFillPane guiFill;
    private JStrokePane guiStroke;
    private JComboExpressionPane guiWKN;
    private JLabel jLabel1;
    private JXTitledPanel jXTitledPanel1;
    private JXTitledPanel jXTitledPanel2;
    private JXTitledPanel jXTitledPanel3;
    // End of variables declaration//GEN-END:variables
}
