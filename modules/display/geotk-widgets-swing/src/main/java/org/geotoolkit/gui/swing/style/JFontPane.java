/*
 *    GeoTools - The Open Source Java GIS Toolkit
 *    http://geotools.org
 * 
 *    (C) 2002-2008, Open Source Geospatial Foundation (OSGeo)
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 2.1 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */
package org.geotoolkit.gui.swing.style;

import org.geotoolkit.gui.swing.resource.MessageBundle;
import java.awt.Component;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JLabel;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.SwingConstants;
import org.geotoolkit.gui.swing.style.StyleElementEditor;
import org.geotoolkit.map.MapLayer;
import org.geotoolkit.style.StyleConstants;

import org.opengis.style.Font;

/**
 * Font panel
 * 
 * @author Johann Sorel
 */
public class JFontPane extends StyleElementEditor<Font>{
    
    private MapLayer layer = null;
    
    /** Creates new form JfontPanel */
    public JFontPane() {
        initComponents();
//        init();
    }
    
    private void init(){
        guiSize.setModel(12d, 0d, Double.POSITIVE_INFINITY, 1d);
        guiStyle.setModel(
                StyleConstants.FONT_STYLE_NORMAL,
                StyleConstants.FONT_STYLE_ITALIC,
                StyleConstants.FONT_STYLE_OBLIQUE);
        guiWeight.setModel(
                StyleConstants.FONT_WEIGHT_NORMAL,
                StyleConstants.FONT_WEIGHT_BOLD);
    }
    
    @Override
    public void parse(Font font){        
        
        if(font != null){
            if(!font.getFamily().isEmpty()){
                guiFamily.parse(font.getFamily().get(0));
            }else{
                guiFamily.parse(getFilterFactory().literal("Dialog"));
            }
            guiSize.parse(font.getSize());
            guiStyle.parse(font.getStyle());
            guiWeight.parse(font.getWeight());
        }
    }
    
    @Override
    public Font create(){
        return getStyleFactory().font(
                guiFamily.create(), 
                guiStyle.create(), 
                guiWeight.create(), 
                guiSize.create());
    }
    
    @Override
    public void setLayer(MapLayer layer){
        guiFamily.setLayer(layer);
        guiSize.setLayer(layer);
        guiStyle.setLayer(layer);
        guiWeight.setLayer(layer);
        this.layer = layer;
    }
    
    @Override
    public MapLayer getLayer(){
        return layer;
    }
        
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();
        jLabel4 = new JLabel();
        guiSize = new JNumberExpressionPane();
        guiFamily = new JTextExpressionPane();
        guiStyle = new JComboExpressionPane();
        guiWeight = new JComboExpressionPane();

        setOpaque(false);





        jLabel1.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel1.setText(MessageBundle.getString("family")); // NOI18N
        jLabel2.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel2.setText(MessageBundle.getString("style")); // NOI18N
        jLabel3.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel3.setText(MessageBundle.getString("size")); // NOI18N
        jLabel4.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel4.setText(MessageBundle.getString("weight")); // NOI18N
        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(guiFamily, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(guiWeight, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(Alignment.LEADING)
                            .addComponent(guiStyle, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(guiSize, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(SwingConstants.HORIZONTAL, new Component[] {jLabel1, jLabel2, jLabel3, jLabel4});

        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(guiFamily, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(guiStyle, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(guiSize, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(guiWeight, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)))
        );

        layout.linkSize(SwingConstants.VERTICAL, new Component[] {guiFamily, jLabel1});

        layout.linkSize(SwingConstants.VERTICAL, new Component[] {guiSize, jLabel3});

        layout.linkSize(SwingConstants.VERTICAL, new Component[] {guiWeight, jLabel4});

        layout.linkSize(SwingConstants.VERTICAL, new Component[] {guiStyle, jLabel2});

    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JTextExpressionPane guiFamily;
    private JNumberExpressionPane guiSize;
    private JComboExpressionPane guiStyle;
    private JComboExpressionPane guiWeight;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
    
}
