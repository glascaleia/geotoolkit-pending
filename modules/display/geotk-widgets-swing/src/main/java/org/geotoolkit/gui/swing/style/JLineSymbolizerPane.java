/*
 *    GeoTools - The Open Source Java GIS Toolkit
 *    http://geotools.org
 * 
 *    (C) 2002-2008, Open Source Geospatial Foundation (OSGeo)
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 2.1 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */
package org.geotoolkit.gui.swing.style;


import org.geotoolkit.gui.swing.resource.MessageBundle;
import java.awt.Component;
import java.awt.FlowLayout;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;

import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.SwingConstants;
import org.geotoolkit.map.MapLayer;
import org.geotoolkit.style.StyleConstants;

import org.jdesktop.swingx.JXTitledPanel;
import org.opengis.style.LineSymbolizer;


/**
 * Line symbolizer edition panel
 * 
 * @author Johann Sorel
 */
public class JLineSymbolizerPane extends  StyleElementEditor<LineSymbolizer> {
    
    private MapLayer layer = null;
    
    /** 
     * Creates new form JLineSymbolizerPanel
     */
    public JLineSymbolizerPane() {
        initComponents();
    }
    
    /**
     * {@inheritDoc }
     */
    @Override
    public void setLayer(MapLayer layer){
        this.layer = layer;
        guiStroke.setLayer(layer);
        guiGeom.setLayer(layer);
        guiUOM.setLayer(layer);
        guiOffset.setLayer(layer);
    }
    
    /**
     * {@inheritDoc }
     */
    @Override
    public MapLayer getLayer(){
        return layer;
    }
 
    /**
     * {@inheritDoc }
     */
    @Override
    public void parse(LineSymbolizer symbol) {
        
        if (symbol != null) {            
            guiGeom.setGeom(symbol.getGeometryPropertyName());
            guiStroke.parse(symbol.getStroke());
            guiOffset.parse(symbol.getPerpendicularOffset());
            guiUOM.parse(symbol.getUnitOfMeasure());
    }
    }

    /**
     * {@inheritDoc }
     */
    @Override
    public LineSymbolizer create(){
        return getStyleFactory().lineSymbolizer(
                    "lineSymbolizer",
                    guiGeom.getGeom(),
                    StyleConstants.DEFAULT_DESCRIPTION,
                    guiUOM.create(),
                    guiStroke.create(), 
                    guiOffset.create());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXTitledPanel1 = new JXTitledPanel();
        guiStroke = new JStrokePane();
        jXTitledPanel2 = new JXTitledPanel();
        guiGeom = new JGeomPane();
        guiUOM = new JUOMPane();
        jXTitledPanel3 = new JXTitledPanel();
        guiOffset = new JOffSetPane();

        setOpaque(false);

        jXTitledPanel1.setBorder(BorderFactory.createEtchedBorder());
        jXTitledPanel1.setTitle(MessageBundle.getString("stroke")); // NOI18N
        jXTitledPanel1.getContentContainer().setLayout(new FlowLayout(FlowLayout.LEFT, 10, 5));
        jXTitledPanel1.getContentContainer().add(guiStroke);


        jXTitledPanel2.setBorder(BorderFactory.createEtchedBorder());
        jXTitledPanel2.setTitle(MessageBundle.getString("general")); // NOI18N
        GroupLayout jXTitledPanel2Layout = new GroupLayout(jXTitledPanel2.getContentContainer());
        jXTitledPanel2.getContentContainer().setLayout(jXTitledPanel2Layout);

        jXTitledPanel2Layout.setHorizontalGroup(
            jXTitledPanel2Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(jXTitledPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jXTitledPanel2Layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(guiGeom, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(guiUOM, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(124, Short.MAX_VALUE))
        );

        jXTitledPanel2Layout.linkSize(SwingConstants.HORIZONTAL, new Component[] {guiGeom, guiUOM});

        jXTitledPanel2Layout.setVerticalGroup(
            jXTitledPanel2Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(jXTitledPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(guiGeom, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(guiUOM, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jXTitledPanel3.setBorder(BorderFactory.createEtchedBorder());
        jXTitledPanel3.setTitle(MessageBundle.getString("displacement")); // NOI18N
        GroupLayout jXTitledPanel3Layout = new GroupLayout(jXTitledPanel3.getContentContainer());
        jXTitledPanel3.getContentContainer().setLayout(jXTitledPanel3Layout);
        jXTitledPanel3Layout.setHorizontalGroup(
            jXTitledPanel3Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(jXTitledPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(guiOffset, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(92, Short.MAX_VALUE))
        );
        jXTitledPanel3Layout.setVerticalGroup(
            jXTitledPanel3Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(jXTitledPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(guiOffset, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addComponent(jXTitledPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jXTitledPanel1, GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
            .addComponent(jXTitledPanel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jXTitledPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(jXTitledPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(jXTitledPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JGeomPane guiGeom;
    private JOffSetPane guiOffset;
    private JStrokePane guiStroke;
    private JUOMPane guiUOM;
    private JXTitledPanel jXTitledPanel1;
    private JXTitledPanel jXTitledPanel2;
    private JXTitledPanel jXTitledPanel3;
    // End of variables declaration//GEN-END:variables

}
