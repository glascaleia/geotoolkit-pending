/*
 *    Geotoolkit - An Open Source Java GIS Toolkit
 *    http://www.geotoolkit.org
 *
 *    (C) 2007 - 2008, Open Source Geospatial Foundation (OSGeo)
 *    (C) 2008 - 2009, Johann Sorel
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 2.1 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */
package org.geotoolkit.gui.swing.style;

import java.awt.Component;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JSpinner;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingConstants;
import org.geotoolkit.factory.FactoryFinder;
import org.opengis.filter.FilterFactory;
import org.opengis.filter.expression.Expression;

/**
 *
 * @author Johann Sorel
 */
public class JDashPane extends javax.swing.JPanel {
    
    /** 
     * Dashes panel
     * 
     * Creates new form JDashPanel 
     */
    public JDashPane() {
        initComponents();

    }

    /**
     * 
     * @return float[]
     */
    public float[] getDashes() {
        if ( ((Number)jsp_lenght.getValue()).doubleValue() == 0 || ((Number)jsp_between.getValue()).doubleValue() == 0) {
            return null;
        } else {
            return new float[]{
                (Float)jsp_lenght.getValue(),
                (Float)jsp_between.getValue()
            };
        }
    }

    /**
     * 
     * @param dashes , the default dashes array
     */
    public void setDashes(float[] dashes) {

        if (dashes!= null && dashes.length != 0) {
            jsp_lenght.setValue(dashes[0]);
            jsp_between.setValue(dashes[1]);
        }else{
            jsp_lenght.setValue(0f);
            jsp_between.setValue(0f);
        }
    }
    
    /**
     * 
     * @return Expression dashes offset
     */
    public Expression getOffset(){
        FilterFactory FF = FactoryFinder.getFilterFactory(null);
        return FF.literal(jsp_offset.getValue());
    }

       
    /**
     * 
     * @param exp default dashes offset
     */
    public void setOffset(Expression exp){
        
        if(exp != null){
            jsp_offset.setValue( Float.parseFloat(exp.toString()) );
        }else{
            jsp_offset.setValue(0f);
        }
      
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jsp_offset = new JSpinner();
        jsp_between = new JSpinner();
        jsp_lenght = new JSpinner();

        jsp_offset.setModel(new SpinnerNumberModel(Float.valueOf(0.0f), null, null, Float.valueOf(1.0f)));
        jsp_offset.setToolTipText("null");

        jsp_between.setModel(new SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), null, Float.valueOf(1.0f)));
        jsp_between.setToolTipText("null");

        jsp_lenght.setModel(new SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), null, Float.valueOf(1.0f)));
        jsp_lenght.setToolTipText("null");

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jsp_lenght, GroupLayout.PREFERRED_SIZE, 46, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(jsp_between, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(jsp_offset, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        layout.linkSize(SwingConstants.HORIZONTAL, new Component[] {jsp_between, jsp_lenght, jsp_offset});

        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createParallelGroup(Alignment.BASELINE)
                .addComponent(jsp_lenght, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(jsp_between, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(jsp_offset, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        layout.linkSize(SwingConstants.VERTICAL, new Component[] {jsp_between, jsp_lenght, jsp_offset});

    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JSpinner jsp_between;
    private JSpinner jsp_lenght;
    private JSpinner jsp_offset;
    // End of variables declaration//GEN-END:variables
}
