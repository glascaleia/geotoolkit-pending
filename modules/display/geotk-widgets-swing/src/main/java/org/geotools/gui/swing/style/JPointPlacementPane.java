/*
 *    GeoTools - The Open Source Java GIS Toolkit
 *    http://geotools.org
 * 
 *    (C) 2002-2008, Open Source Geospatial Foundation (OSGeo)
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 2.1 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */
package org.geotools.gui.swing.style;

import org.geotools.gui.swing.resource.MessageBundle;
import java.awt.Component;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JLabel;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.SwingConstants;
import org.geotools.gui.swing.style.StyleElementEditor;
import org.geotoolkit.map.MapLayer;
import org.opengis.style.PointPlacement;

/**
 * Point placement panel
 * 
 * @author Johann Sorel
 */
public class JPointPlacementPane extends StyleElementEditor<PointPlacement>{
    
    private MapLayer layer = null;
    
    /** Creates new form JPointPlacementPanel */
    public JPointPlacementPane() {
        initComponents();
        init();
    }
    
    private void init(){
        guiRotation.setModel(0, 0d, 360d, 1);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        guiAnchor = new JAnchorPointPane();
        guiDisplacement = new JDisplacementPane();
        jLabel1 = new JLabel();
        guiRotation = new JNumberExpressionPane();

        setOpaque(false);

        guiAnchor.setBorder(BorderFactory.createTitledBorder(MessageBundle.getString("anchor"))); // NOI18N
        guiAnchor.setOpaque(false);



        guiDisplacement.setBorder(BorderFactory.createTitledBorder(MessageBundle.getString("displacement"))); // NOI18N
        jLabel1.setText(MessageBundle.getString("rotation")); // NOI18N
        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(guiRotation, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addComponent(guiAnchor, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addComponent(guiDisplacement, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        );

        layout.linkSize(SwingConstants.HORIZONTAL, new Component[] {guiAnchor, guiDisplacement});

        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(guiRotation, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(guiAnchor, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(guiDisplacement, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        layout.linkSize(SwingConstants.VERTICAL, new Component[] {guiRotation, jLabel1});

    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void setLayer(MapLayer layer) {
        this.layer = layer;
        guiAnchor.setLayer(layer);
        guiDisplacement.setLayer(layer);
        guiRotation.setLayer(layer);
    }

    @Override
    public MapLayer getLayer() {
        return layer;
    }

    @Override
    public void parse(PointPlacement placement) {
        if(placement != null){
            guiAnchor.parse(placement.getAnchorPoint());
            guiDisplacement.parse(placement.getDisplacement());
            guiRotation.parse(placement.getRotation());
        }
    }

    @Override
    public PointPlacement create() {
        return getStyleFactory().pointPlacement(
                guiAnchor.create(),
                guiDisplacement.create(),
                guiRotation.create());
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JAnchorPointPane guiAnchor;
    private JDisplacementPane guiDisplacement;
    private JNumberExpressionPane guiRotation;
    private JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
    
}
